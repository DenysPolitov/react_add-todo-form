{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","TodoInfo","todo","className","TodoList","todos","map","getUser","usersFromServer","find","App","useState","setTodos","setTitle","setUserId","hasTitleError","setTitleError","hasUserError","setUserError","useEffect","initialTodos","todosFromServer","action","method","onSubmit","event","preventDefault","newTitle","newUserId","newTodo","Math","max","current","addTodo","placeholder","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1526b503.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props | null> = ({ user }) => (\n  <>\n    {user && (\n      <div>\n        <p data-cy=\"username\">\n          <b>Username: </b>\n          {user.name}\n        </p>\n\n        <p data-cy=\"email\">\n          <b>Email: </b>\n          {user.email}\n        </p>\n      </div>\n    )}\n  </>\n);\n","import React from 'react';\nimport './TodoInfo.scss';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <div className=\"todo-card\" key={todo.id}>\n      <p data-cy=\"title\">\n        <b>Title: </b>\n        {title}\n      </p>\n\n      <UserInfo user={user} />\n\n      <p data-cy=\"status\">\n        <b>Status: </b>\n        {\n          completed\n            ? <span className=\"todo-card__status--done\">Complete</span>\n            : <span className=\"todo-card__status--todo\">Not completed!</span>\n        }\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport './TodoList.scss';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <div className=\"todos\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number) {\n  const foundUser = usersFromServer.find(user => userId === user.id);\n\n  return foundUser || null;\n}\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserError, setUserError] = useState(false);\n\n  function addTodo(newTitle: string, newUserId: number) {\n    const newTodoId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    const newTodo = {\n      userId: newUserId,\n      id: newTodoId,\n      title: newTitle,\n      completed: false,\n      user: getUser(newUserId),\n    };\n\n    setTodos(current => [...current, newTodo]);\n  }\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addTodo(title, userId);\n    setTitle('');\n    setUserId(0);\n  }\n\n  useEffect(() => {\n    const initialTodos: Todo[] = todosFromServer.map(todo => (\n      {\n        ...todo,\n        user: getUser(todo.userId),\n      }\n    ));\n\n    setTodos(initialTodos);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Add todo form\n      </h1>\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              placeholder=\"Enter a title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setTitleError(false);\n              }}\n            />\n          </label>\n\n          {hasTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => {\n                setUserId(+event.target.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"0\">\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {hasUserError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}